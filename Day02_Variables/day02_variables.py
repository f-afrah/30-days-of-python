# -*- coding: utf-8 -*-
"""day02_variables

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1D8KQZYRZfXnWyzY_M5kda2CUMm4g7Wwo
"""

# day 2 using variables
# using variables in f-strings
food = 'lasagna'
colour = 'green'
hobby = 'baking'
print("I like the colour " + colour + ", it's my favourite.") # you can print using concatenating but this isnt good practice
print(f"I like the colour {colour}, it's my favourite.") # use f strings when you want to print a sentence including variables (simpler&cleaner)
print(f"I love eating {food}.")
print(f"I enjoy {hobby} in my spare time.")
print(f"My favourite food is {food}, my favourtie colour is {colour}, and my favourite hobby is {hobby}.")
print()
# first name = 'Faiza' -> generated error here, variables cannot have spaces so use underscores
first_name = 'Faiza'
last_name = 'Afrah'
full_name = first_name + last_name
print(full_name) # printed names with no space
# we need to change the full name variable to include a space:
full_name = first_name + " " + last_name
print(full_name) # now we have a space between the 2 words
print(first_name, last_name) # this also gives a space
# note: when using + with strings, ie concatenating, python glues the two strings together without any spaces as a default, you have to specifiy if you want spaces
print(f"{full_name}") # same result using f-string in print
print(f"{first_name}{last_name}") # no space printed if theres no space in the f-string
print(f"{first_name} {last_name}") # space is printed now
print(f"{first_name}, {last_name}") # comma and space both printed as it was used in f-string
# note: with f-strings, python prints exactly what you tell it to (very customisable and precise)
print(f"Hi, my name is {full_name}.")
print(f"Hi, my name is {first_name} {last_name}.")
print(f"Hi, my name is {first_name}.upper()") # this just prints .upper() as its inside the ""
print(f"Hi, my name is {first_name.upper()}") # the function works now as its inside the {}, but only the variable is in uppercase
print(f"Hi, my name is {first_name}.".upper()) # now the function is outsisde of the string (""), it applies to the entire string
print(f"Hi, my name is {first_name}.".lower())
print(f"Hi, my name is {first_name}.".title())
print(f"Hi, my name is {first_name.lower()}.".upper()) # the function outside of the string overrides that inside the string, as it affects everything in the string

print()
print()
#using variables for calculations
height = 12
width = 8
area = 0.5 * width * height
print(area)
print(0.5 * height * width)
side1 = 11
side2 = 9
perimeter = side1 + width + side2
print(perimeter)
print(side1 + width + side2)
print()
age = 26
print(age)
print(age + 10)
print(f"I am {age}, in 10 years I'll be {age + 10}.")
print(f"I am {age}, in 20 years I'll be {age + 20}.")
print(f"I am {age}, 5 years ago I was {age - 5}.")
print(f"I am {age}, 2 years ago I was {age - 2}.")
age2 = 36
age3 = 46
print(f"I am {age}, in 10 years I'll be {age2}.")
print(f"I am {age}, in 20 years I'll be {age3}.")
age4 = 21
age5 = 24
print(f"I am {age}, 5 years ago I was {age4}.")
print(f"I am {age}, 2 years ago I was {age5}.")
print()
temperature_c = 25
print(temperature_c)
temperature_f = (temperature_c * 9/5) + 32
print(temperature_f)

print()
print()
#extra push work
name = 'faiza'
hobby = 'cafe hopping'
city = 'london'
print(f"Hi, I'm {name} from {city}, and I love {hobby}.")
print(f"Hi, I'm {name.title()} from {city.title()}, and I love {hobby.upper()}.")
print()
sentence = "Good morning, it's nice to meet you"
print(sentence)
letter = 'o'
count = sentence.count(letter) # counts how many times the letter 'o' appears in the sentence
print(count)
print(f"The letter {letter} appears {count} times in the sentence.")
letter = 'i'
count = sentence.count(letter) # need to redefine count so that it will update with new letter variable
print(f"The letter {letter} appears {count} times in the sentence.")
letter = 'e'
count = sentence.count(letter)
print(f"The letter {letter} appears {count} times in the sentence.")
print()
greeting = 'Hello'
name = 'Faiza'
print(greeting + " " + name + ".")
print(f"{greeting} {name}.") # this is much simpler and neater